#!/bin/bash  

VERSION="1.0.0.1"
BUILD_TIME="2017-04-25"

SCRIPT_NAME="$(basename "$0")"
CONTROL_DIR="/home/work/fuxi/webroot/fuxi_framework/control"
PROC_NAME="job_"

#### include files
source ${CONTROL_DIR}/control.conf || exit 1
source ${CONTROL_DIR}/control.inc  || exit 1
source ${CONTROL_DIR}/control.func || exit 1

prepare
clean_log

INTERFACE=$1
TARGET=$2

case "$INTERFACE" in
    start|stop|restart|status|monitor|healthcheck)
        echo -e "running:      [fuxi] ${INTERFACE}" 
        if [ "${TARGET}" == "" ];then
            ${INTERFACE} "scheduler"
            ${INTERFACE} "monitor"
            uwsgi_control ${INTERFACE}
            sleep 3
            ps aux | grep "job_scheduler" | grep -v "grep" > /dev/null 2>&1
            ret1=$?
            ps aux | grep "job_monitor" | grep -v "grep" > /dev/null 2>&1
            ret2=$?
            ps aux | grep "uwsgi" | grep -v "grep" > /dev/null 2>&1
            ret3=$?
            if [ "${INTERFACE}" != "stop" ];then
                [ "$ret1" == "0" -a "$ret2" == "0" -a "$ret3" == "0" ]
                RET=$?
            else
                [ "$ret1" != "0" -a "$ret2" != "0" -a "$ret3" != "0" ]
                RET=$?
            fi
        elif [ "${TARGET}" == "monitor" -o "${TARGET}" == "scheduler" ];then
            ${INTERFACE} $TARGET
            ps aux | grep "job_${TARGET}" | grep -v "grep" > /dev/null 2>&1
            RET=$?
        elif [ "${TARGET}" == "uwsgi" ];then
            uwsgi_control ${INTERFACE}
            RET=$?
        else
            echo "invalid option"
            exit 1
        fi
        if [ "${RET}" == "0" ];then
            STA="AOS_OK"
        else
            STA="AOS_ERR"
        fi
        echo -e "return value: ${RET} ($STA)"
        exit ${RET}
        ;;
    reload)
        echo -e "running:      [nginx] ${INTERFACE}"
        ${INTERFACE}
        RET=$?
        if [ "${RET}" -eq "0" ];then
            echo -e "return value: ${RET} AOS_OK"
        else
            echo -e "return value: ${RET} AOK_ERR"
        fi
        exit ${RET}
        ;;
    *)
        exit ${AOS_ERR}
        ;;
esac
